diff --git a/node_modules/react-joyride/dist/index.mjs b/node_modules/react-joyride/dist/index.mjs
index c8e926a..1b1c67e 100644
--- a/node_modules/react-joyride/dist/index.mjs
+++ b/node_modules/react-joyride/dist/index.mjs
@@ -1,6 +1,6 @@
 import React, { useMemo, useEffect, useReducer, useCallback, useState, useRef, forwardRef, useImperativeHandle } from 'react';
 import { flip, shift, autoPlacement, offset as offset$1, arrow as arrow$1, hide, autoUpdate } from '@floating-ui/react';
-import ReactDOM, { findDOMNode, unstable_renderSubtreeIntoContainer, unmountComponentAtNode } from 'react-dom';
+import ReactDOM, { findDOMNode } from 'react-dom';
 import { Animate } from 'react-simple-animate';
 import { usePopper } from 'react-popper';
 import { useFloating, useTransitionStyles, useInteractions, useRole, useClick, useDismiss, useFocusGuard } from '@floating-ui/react';
@@ -1283,7 +1283,7 @@
   }, [props.styles, step.styles, defaultStyles]);
   if (!props.run || !isMounted) {
     return null;
-  }
+  }  
   return /* @__PURE__ */ React.createElement(Portal, {
     target: props.portal,
     id
@@ -1486,9 +1486,17 @@
 
     if (target) {
       this.portal = document.createElement("div");
-      unstable_renderSubtreeIntoContainer(this, children, this.portal);
+      // unstable_renderSubtreeIntoContainer(this, children, this.portal);
+      this.root = ReactDOM.createRoot(this.portal)
+      this.root.render(children)
       target.appendChild(this.portal);
     }
+  }
+
+  componentWillUnmount() {
+    this.root?.unmount();
+    // unmountComponentAtNode(this.portal);
+    this.portal?.remove();
   }
 
   render() {

